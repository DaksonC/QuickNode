name: 🚀 Publish to NPM

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test

      - name: 🔍 Run linting
        run: npm run lint

      - name: 🏗️ Build project
        run: npm run build

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🔍 Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view @10565/quicknode-cli version 2>/dev/null || echo "0.0.0")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "published=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "Version changed: $PUBLISHED_VERSION -> $CURRENT_VERSION"
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT_VERSION"
          fi

      - name: 🚀 Publish to NPM
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🏷️ Create Git Tag
        if: steps.version-check.outputs.should_publish == 'true' && github.ref == 'refs/heads/main'
        run: |
          VERSION=v${{ steps.version-check.outputs.current }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag $VERSION
          git push origin $VERSION

      - name: 📝 Create GitHub Release
        if: steps.version-check.outputs.should_publish == 'true' && github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current }}
          release_name: Release v${{ steps.version-check.outputs.current }}
          body: |
            ## 🚀 What's New
            
            Version ${{ steps.version-check.outputs.current }} of @10565/quicknode-cli is now available!
            
            ### 📦 Installation
            ```bash
            npm install -g @10565/quicknode-cli@${{ steps.version-check.outputs.current }}
            ```
            
            ### 📋 Changes
            - Auto-generated release from CI/CD
            - See commit history for detailed changes
            
            ### 🐛 Bug Reports
            Found an issue? [Report it here](https://github.com/DaksonC/QuickNode/issues)
          draft: false
          prerelease: false

      - name: 📢 Notify Success
        if: steps.version-check.outputs.should_publish == 'true'
        run: |
          echo "✅ Successfully published @10565/quicknode-cli@${{ steps.version-check.outputs.current }} to NPM!"
          echo "🔗 NPM: https://www.npmjs.com/package/@10565/quicknode-cli"
          echo "🏷️ GitHub Release: https://github.com/DaksonC/QuickNode/releases/tag/v${{ steps.version-check.outputs.current }}"
